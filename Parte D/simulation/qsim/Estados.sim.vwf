/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("x")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("z1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("z2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("z3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("z4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
	}
}
TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("x")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
	}
}
TRANSITION_LIST("z1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.232;
		LEVEL 0 FOR 38.379;
		LEVEL 1 FOR 30.018;
		LEVEL 0 FOR 54.982;
		LEVEL 1 FOR 15.524;
		LEVEL 0 FOR 44.476;
		LEVEL 1 FOR 25.524;
		LEVEL 0 FOR 74.476;
		LEVEL 1 FOR 40.018;
		LEVEL 0 FOR 49.982;
		LEVEL 1 FOR 70.018;
		LEVEL 0 FOR 39.982;
		LEVEL 1 FOR 35.018;
		LEVEL 0 FOR 44.982;
		LEVEL 1 FOR 35.018;
		LEVEL 0 FOR 64.982;
		LEVEL 1 FOR 25.018;
		LEVEL 0 FOR 54.982;
		LEVEL 1 FOR 10.524;
		LEVEL 0 FOR 69.476;
		LEVEL 1 FOR 30.524;
		LEVEL 0 FOR 34.476;
		LEVEL 1 FOR 50.018;
		LEVEL 0 FOR 39.982;
		LEVEL 1 FOR 18.389;
	}
}
TRANSITION_LIST("z2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.939;
		LEVEL 0 FOR 37.836;
		LEVEL 1 FOR 20.528;
		LEVEL 0 FOR 50.056;
		LEVEL 1 FOR 44.977;
		LEVEL 0 FOR 10.023;
		LEVEL 1 FOR 59.977;
		LEVEL 0 FOR 15.023;
		LEVEL 1 FOR 74.944;
		LEVEL 0 FOR 25.056;
		LEVEL 1 FOR 64.944;
		LEVEL 0 FOR 65.056;
		LEVEL 1 FOR 24.944;
		LEVEL 0 FOR 69.472;
		LEVEL 1 FOR 20.528;
		LEVEL 0 FOR 79.472;
		LEVEL 1 FOR 10.528;
		LEVEL 0 FOR 69.472;
		LEVEL 1 FOR 55.561;
		LEVEL 0 FOR 15.023;
		LEVEL 1 FOR 54.977;
		LEVEL 0 FOR 10.023;
		LEVEL 1 FOR 19.944;
		LEVEL 0 FOR 79.472;
		LEVEL 1 FOR 18.225;
	}
}
TRANSITION_LIST("z3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.161;
		LEVEL 0 FOR 28.425;
		LEVEL 1 FOR 29.94;
		LEVEL 0 FOR 50.028;
		LEVEL 1 FOR 45.004;
		LEVEL 0 FOR 9.996;
		LEVEL 1 FOR 60.004;
		LEVEL 0 FOR 14.996;
		LEVEL 1 FOR 74.972;
		LEVEL 0 FOR 25.028;
		LEVEL 1 FOR 64.972;
		LEVEL 0 FOR 65.028;
		LEVEL 1 FOR 24.972;
		LEVEL 0 FOR 55.06;
		LEVEL 1 FOR 34.94;
		LEVEL 0 FOR 65.06;
		LEVEL 1 FOR 24.94;
		LEVEL 0 FOR 50.06;
		LEVEL 1 FOR 74.972;
		LEVEL 0 FOR 14.996;
		LEVEL 1 FOR 55.004;
		LEVEL 0 FOR 9.996;
		LEVEL 1 FOR 19.972;
		LEVEL 0 FOR 65.06;
		LEVEL 1 FOR 32.414;
	}
}
TRANSITION_LIST("z4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.602;
		LEVEL 0 FOR 13.338;
		LEVEL 1 FOR 54.693;
		LEVEL 0 FOR 54.981;
		LEVEL 1 FOR 30.385;
		LEVEL 0 FOR 29.615;
		LEVEL 1 FOR 40.385;
		LEVEL 0 FOR 59.615;
		LEVEL 1 FOR 40.019;
		LEVEL 0 FOR 49.981;
		LEVEL 1 FOR 70.019;
		LEVEL 0 FOR 39.981;
		LEVEL 1 FOR 35.019;
		LEVEL 0 FOR 15.307;
		LEVEL 1 FOR 64.693;
		LEVEL 0 FOR 30.307;
		LEVEL 1 FOR 59.693;
		LEVEL 0 FOR 15.307;
		LEVEL 1 FOR 95.059;
		LEVEL 0 FOR 24.615;
		LEVEL 1 FOR 45.385;
		LEVEL 0 FOR 19.615;
		LEVEL 1 FOR 50.019;
		LEVEL 0 FOR 15.307;
		LEVEL 1 FOR 43.06;
	}
}


DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "x";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "z1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "z2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "z3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "z4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
